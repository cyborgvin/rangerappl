{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\capta\\\\OneDrive\\\\Desktop\\\\rangerappl\\\\basic\\\\src\\\\App.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Map from './Map';\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { CssBaseline, Grid } from '@material-ui/core';\nimport { nanoid } from \"nanoid\";\nimport Form from \"./components/Form\";\nimport Todo from \"./components/Todo\";\nimport List from './components/List/List';\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new obkect\n        // whose `completed` prop has been inverted\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n    localStorage.setItem('tasks', JSON.stringify(remainingTasks));\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return { ...task,\n          name: newName\n        };\n      }\n\n      return task;\n    });\n    setTasks(editedTaskList);\n    localStorage.setItem('tasks', JSON.stringify(editedTaskList));\n  }\n\n  const taskList = tasks.map(task => /*#__PURE__*/React.createElement(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    key: task.id,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }));\n\n  function addTask(name) {\n    const newTask = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n    localStorage.setItem('tasks', JSON.stringify([...tasks, newTask]));\n  }\n\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/capta/OneDrive/Desktop/rangerappl/basic/src/App.js"],"names":["React","useState","useRef","useEffect","Map","CssBaseline","Grid","nanoid","Form","Todo","List","App","props","tasks","setTasks","toggleTaskCompleted","id","updatedTasks","map","task","completed","localStorage","setItem","JSON","stringify","deleteTask","remainingTasks","filter","editTask","newName","editedTaskList","name","taskList","addTask","newTask","listHeadingRef","prevTaskLength","usePrevious","length","current","focus","width"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport Map from './Map';\r\nimport \"./App.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { CssBaseline, Grid } from '@material-ui/core';\r\nimport { nanoid } from \"nanoid\";\r\n\r\nimport Form from \"./components/Form\";\r\nimport Todo from \"./components/Todo\";\r\nimport List from './components/List/List';\r\n\r\nfunction App(props) {\r\n  const [tasks, setTasks] = useState(props.tasks);\r\n\r\n  function toggleTaskCompleted(id) {\r\n    const updatedTasks = tasks.map(task => {\r\n      // if this task has the same ID as the edited task\r\n      if (id === task.id) {\r\n        // use object spread to make a new obkect\r\n        // whose `completed` prop has been inverted\r\n        return {...task, completed: !task.completed}\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(updatedTasks);\r\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\r\n  }\r\n\r\n\r\n  function deleteTask(id) {\r\n    const remainingTasks = tasks.filter(task => id !== task.id);\r\n    setTasks(remainingTasks);\r\n    localStorage.setItem('tasks', JSON.stringify(remainingTasks));\r\n  }\r\n\r\n\r\n  function editTask(id, newName) {\r\n    const editedTaskList = tasks.map(task => {\r\n    // if this task has the same ID as the edited task\r\n      if (id === task.id) {\r\n        //\r\n        return {...task, name: newName}\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(editedTaskList);\r\n    localStorage.setItem('tasks', JSON.stringify(editedTaskList));\r\n  }\r\n\r\n  const taskList = tasks\r\n  .map(task => (\r\n    <Todo\r\n      id={task.id}\r\n      name={task.name}\r\n      completed={task.completed}\r\n      key={task.id}\r\n      toggleTaskCompleted={toggleTaskCompleted}\r\n      deleteTask={deleteTask}\r\n      editTask={editTask}\r\n    />\r\n  ));\r\n\r\n\r\n  function addTask(name) {\r\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\r\n    setTasks([...tasks, newTask]);\r\n    localStorage.setItem('tasks', JSON.stringify([...tasks, newTask]));\r\n  }\r\n\r\n  const listHeadingRef = useRef(null);\r\n  const prevTaskLength = usePrevious(tasks.length);\r\n\r\n  useEffect(() => {\r\n    if (tasks.length - prevTaskLength === -1) {\r\n      listHeadingRef.current.focus();\r\n    }\r\n  }, [tasks.length, prevTaskLength]);\r\n\r\n  return (\r\n    <>\r\n\r\n      <CssBaseline />\r\n\r\n\r\n      <Grid container spacing={3} style={{width: '100%'}}>\r\n\r\n      <Grid item xs={12} md={8}>\r\n      <Map />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={4}>\r\n\r\n      <Form />\r\n      <List />\r\n\r\n      </Grid>\r\n\r\n      </Grid>\r\n    </>\r\n  );\r\n\r\n  \r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}